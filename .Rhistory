1/3
1/8
pbinom(3, size=4, prob=.5, lower.tail=FALSE)
datasets(mtcars)
data(mtcars)
attach(mtcars)
mean(mpg)
sd(mpg)
t.test(mpg)
.5/2
1-.25
.05/2
1-.025
1/9 + 1/9
(1/9 + 1/9) ^ 2
9*9
4/81
sqrt(2/9)
qt(.975, 8) /3
head(mtcars)
t.test(mpg ~ cyl, paired = FALSE, var.equal=TRUE, data=mtcars)$conf
a <- subset(mtcars, cyl %in% c(4,6))
a
t.test(mpg ~ cyl, paired = FALSE, var.equal=TRUE, data=mtcars)$conf
t.test(mpg ~ cyl, paired = FALSE, var.equal=TRUE, data=a)$conf
t.test(mpg ~ cyl, paired = FALSE, var.equal=TRUE, data=a)
8 * (1.5^2) + 8 * (1.8^2)
43.92 / 20
1.5+1.8
3.3/2
(1.5^2) + (1.8^2)
5.49/20
43.92/16
1-.05/2
qt(.975, df=8) * 10
1100 + c(qt(.975, df=8) * 10, -1 * (qt(.975, df=8) * 10))
qt(.975, df=8)
6/2.306
qt(df=18, .975)
qt(df=18, .975) * ((.68/10)+(.6/10))^(1/2)
qt(df=198, .975)
qt(df=198, .975) * (((4/100)+(.25/100)))^(.5)
-2 + c(-1 * qt(df=198, .975) * (((4/100)+(.25/100)))^(.5), qt(df=198, .975) * (((4/100)+(.25/100)))^(.5))
2 + c(-1 * qt(df=198, .975) * (((4/100)+(.25/100)))^(.5), qt(df=198, .975) * (((4/100)+(.25/100)))^(.5))
a <- qt(df=16, (1-.1/2))
1.8^2
3.24/9
1.5^2
/9
2.25/9
-4 + c(-a(.36+.25)^.5, a(.36+.25)^.5)
-4 + c(-1 * (a(.36+.25)^.5), a(.36+.25)^.5)
a
-4 + c(-1 * (a * (.36+.25)^.5), a * (.36+.25)^.5)
install.packages("UsingR")
library(UsingR; data(galton))
library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child, col="blue", breaks=100)
hist(galton$parent,col="blue", breaks=100)
mean(galton$child)
mean(galton$parent)
install_from_swirl("Regression Models")
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child~parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child~parents, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
fit$coef
length(fit$coef)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs, rhs)
carChild <- car(children)
varChild <- var(children)
varChild <- var(galton$children)
?var
varChild <- var(children, data=galton)
swirl()
varChild <- var(galton$children)
galton
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst(est(ols.slpe, ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, VarRes + varEst)
all.equal(varChild, (VarRes + varEst)
)
varRes
all.equal(carChild, varRes+varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel~mag+dist, attenu)
mean(efit)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
lm(w~x)
?lm
?weighted.mean
weighted.mean(x,w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
a <- lm(y~x)
a$slope
?I
lm(y-mean(y) ~ x - mean(x)-1)
lm(y-mean(y) ~ ((x - mean(x))-1)
)
lm(y-mean(y) ~ ((x - mean(x))-1))
lm(I(y-mean(y)) ~ I((x - mean(x))-1))
data(mtcars)
attach(mtcars)
lm(mpg~weight)
lm(mpg~weight, data=mtcars)
summary(mtcars)
lm(mpg~wt)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(y-mean(y))~I(x-mean(x))-1)
lm(y~x)
myPlot<-function(beta){
yy<-y-mean(y)
xx<-x-mean(x)
freqData<-as.data.frame(table(xx,yy))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((yy-beta*xx)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
library(manipulate)
myPlot<-function(beta){
yy<-y-mean(y)
xx<-x-mean(x)
freqData<-as.data.frame(table(xx,yy))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((yy-beta*xx)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y-beta*x)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
freqData$x
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y-beta*x)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(-1,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(-2,1.2,step=0.02))
.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86).
x <- c(8.58, 10.46, 9.01, 9.64, 8.86).
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
normalized = (x-min(x))/(max(x) - min(x))
normalized
normalized = (x-mean(x))/sd(x)
normzlied
normalized
mean(normalized)
sd(normalized)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(x)
mean(x)
(1.39*.8)/(.8*.8)
(.72*.47)/(.47*.47)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
(x*y)/(x^2)
sum(x*y)/sum(x^2)
lm(y~(x-1))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
a <- lm(y~x)
a$coefficient
a
std.dev(a)
std.dev
sd(a)
sd(a$coefficient)
summary(a)
.7224/.3107
pnorm(2.325072)
qnorm(2.325072)
tnorm(2.325072)
a$residual
b <- a$residual
summary(b)
summary(a)$sigma
data(mtcars)
clr(a)
rm(a)
rm(b)
rm(x)
rm(y)
mtcars
attach(mtcars)
lm(mpg~wt)
a <- lm(mpg~wt)
summary(a)
mean(wt)
mean(wt)/.5591
sumCoef <- a$coefficients
sumCoef[1,1]
a$coefficients
sumCoef <- summary(a)$coefficients
sumCoef
sumCoef[1,1]
sumCoef[1,1] + c(-1,1) * qt(.975, df=a$df) * sumCoef[1,2]
sumCoef[2,1] + c(-1,1) * qt(.975, df=a$df) * sumCoef[2,2]
?mtars
?mtcars
3 + c(-1,1) * qt(.975, df=a$df) * sumCoef[2,2]
wt
newdata=data.frame(wt=80)
predict(a, newdata, interval="predict")
newdata=data.frame(wt=3)
predict(a, newdata, interval="predict")
newdata
newdata=data.frame(wt=mean(wt))
newdata
predict(a, newdata, interval="predict")
mean(wt)
newdata
a
fit <- lm(mpg ~ wt, mtcars)
newdata <- data.frame(wt = mean(wt))
x <- predict(fit, newdata, interval = ("confidence"))
x
a
newdata
predict(a, newdata, interval="confidence")
a
a1 <- lm(mpg ~ I(wt-mean(wt)))
coef(a1)
lm(mpg~I(wt*2))
a
lm(mpg~I(wt/2))
c <- lm(mpg~I(wt/2))
newdata<-data.frame(w=mean(wt))
predict(c, newdata, interval="confidence")
newdata
c
predict(c, newdata, interval="confidence")
lm(mpg~I(wt/2))
c<- lm(mpg~I(wt/2))
summary(c)
summary(c)$coefficients
sumCoef <- summary(c)$coefficients
sumCoef
sumCoef[2,1] + c(-1,1) * qt(.975, df=c$df) * sumCoef[2,2]
a <- lm(mpg~wt)
anova(a)
847.73/278.32
y <- lm(mean(wt) ~ 1)
z <- lm(mpg~wt)
y/z
y
y[1,1]
y$coefficients
y$coefficients[1,1]
y$coefficients[1]
y$coefficients[1] / (278/847)
278/847
y
y$residual
z$residual
y$residuals
z$residuals
resid(z)
sum(resid(z)^2)
sum(resid(y)^2)
yhat <- predict(fit, newdata=data.frame(wt=mtcars$wt))
ymean <- mean(wt)
sum((mtcars$mpg-yhat)^2) / sum((mtcars$mpg - ymean)^2)
anova(fit)
sum((mtcars$mpg-yhat)^2)
sum((mtcars$mpg - ymean)^2)
fit
a
yhat <- predict(fit, newdata=data.frame(wt=mtcars$wt))
yhat
sum((mpg-yhat) ^2)
ymean <- predict(fit, mean(wt))
ymean
sum((mpg-ymean)^2)
ymean <- predict(fit, newdata=data.frame(wt=mean(wt)))
ymean
sum(mpg-ymean)^2)
sum((mpg-ymean)^2)
y <- sum((mpg-yhat) ^2)
z <- sum((mpg-ymean)^2)
y/z
library(caret)
install.packages("caret")
library(caret)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
spam
inTrain <- createDataPartition(y=spam$type, p=.75, list=FALSE)
class(inTrain)
inTrain
head(inTrain)
head(spam)
spam
spam$type
unique(spam$type)
table(spam$type)
table(unique(spam$type))
exit
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data=subset(haireye, Sex == 'Male')
)
n1$save('n1.html')
n1
exit
setwd("~/LL/Coursera/Courses/DevelopingDataProducts/NFLRBProjections")
deployApp()
library(shinyapps)
deployApp()
setwd("~/LL/Coursera/Courses/DevelopingDataProducts/Slidify/NFLRBProjections")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
browseURL("index.Rmd")
browseURL("index.html")
publish(user="LL8054", repo="NFLRBProjections")
publish(user="LL8054", repo="NFLRBProjections.git")
setwd("~/LL/Coursera/Courses/DevelopingDataProducts/Slidify/NFLRBProjections")
publish(user="LL8054", repo="NFLRBPRojections")
